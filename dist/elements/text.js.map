{"version":3,"sources":["../../src/elements/text.js"],"names":["util","require","React","DraggableBase","Text","props","x","y","fill","fontSize","fontFamily","fontWeight","textAnchor","text","children","lineHeight","isArray","map","string","index","draggableProps","propTypes","PropTypes","any","isRequired","number","defaultProps","module","exports"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,QAAQD,QAAQ,OAAR,CAAd;;AAEA,IAAME,gBAAgBF,QAAQ,kBAAR,CAAtB;;IAEMG,I;;;;;;;;;;;6BAEK;AAAA,mBAMH,KAAKC,KANF;AAAA,UAELC,CAFK,UAELA,CAFK;AAAA,UAEFC,CAFE,UAEFA,CAFE;AAAA,UAGLC,IAHK,UAGLA,IAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAIKC,UAJL,UAIKA,UAJL;AAAA,UAIiBC,UAJjB,UAIiBA,UAJjB;AAAA,UAKLC,UALK,UAKLA,UALK;;;AAQP,UAAIC,OAAO,KAAKR,KAAL,CAAWS,QAAtB;;AAEA,UAAIC,aAAa,KAAKV,KAAL,CAAWU,UAAX,IAAyBN,QAA1C;;AAEA,UAAGT,KAAKgB,OAAL,CAAaH,IAAb,CAAH,EAAuB;AACrBA,eAAOA,KAAKI,GAAL,CAAS,UAACC,MAAD,EAASC,KAAT,EAAmB;AACjC,iBAAQ;AAAA;AAAA,cAAO,KAAKA,KAAZ,EAAmB,GAAGb,CAAtB,EAAyB,GAAIS,aAAaI,KAAd,GAAuBZ,CAAnD,EAAsD,mBAAkB,aAAxE;AAAuFW;AAAvF,WAAR;AACD,SAFM,CAAP;AAGD;;AAED,aACE;AAAA;AAAA,mBAAM,GAAGZ,CAAT;AACM,aAAGC,CADT;AAEM,gBAAMC,IAFZ;AAGM,sBAAYI,UAHlB;AAIM,oBAAUH,QAJhB;AAKM,sBAAYC,UALlB;AAMM,sBAAYC;AANlB,WAOU,KAAKS,cAPf;AAQGP;AARH,OADF;AAYD;;;;EAhCgBV,a;;AAoCnB;;;AACAC,KAAKiB,SAAL,GAAiB;AACff,KAAGJ,MAAMoB,SAAN,CAAgBC,GAAhB,CAAoBC,UADR;AAEfjB,KAAGL,MAAMoB,SAAN,CAAgBC,GAAhB,CAAoBC,UAFR;AAGfhB,QAAMN,MAAMoB,SAAN,CAAgBJ,MAAhB,CAAuBM,UAHd;AAIff,YAAUP,MAAMoB,SAAN,CAAgBG,MAJX;AAKff,cAAYR,MAAMoB,SAAN,CAAgBJ,MALb;AAMfN,cAAYV,MAAMoB,SAAN,CAAgBJ;AANb,CAAjB;;AASAd,KAAKsB,YAAL,GAAoB;AAClBpB,KAAG,CADe;AAElBC,KAAG,CAFe;AAGlBC,QAAM,MAHY;AAIlBC,YAAU,EAJQ;AAKlBC,cAAY,OALM;AAMlBE,cAAY;AANM,CAApB;;AASAe,OAAOC,OAAP,GAAiBxB,IAAjB","file":"text.js","sourcesContent":["const util = require('util');\nconst React = require('react');\n\nconst DraggableBase = require('./base/draggable');\n\nclass Text extends DraggableBase {\n\n  render() {\n    const {\n      x, y,\n      fill,\n      fontSize, fontFamily, fontWeight,\n      textAnchor\n    } = this.props;\n    \n    let text = this.props.children;\n\n    let lineHeight = this.props.lineHeight || fontSize;\n\n    if(util.isArray(text)) {\n      text = text.map((string, index) => {\n        return (<tspan key={index} x={x} y={(lineHeight * index) + y} alignmentBaseline=\"before-edge\">{string}</tspan>);\n      });\n    }\n\n    return (\n      <text x={x}\n            y={y}\n            fill={fill}\n            textAnchor={textAnchor}\n            fontSize={fontSize}\n            fontFamily={fontFamily}\n            fontWeight={fontWeight}\n            {...this.draggableProps}>\n        {text}\n      </text>\n    );\n  }\n\n}\n\n// Prop types\nText.propTypes = {\n  x: React.PropTypes.any.isRequired,\n  y: React.PropTypes.any.isRequired,\n  fill: React.PropTypes.string.isRequired,\n  fontSize: React.PropTypes.number,\n  fontFamily: React.PropTypes.string,\n  textAnchor: React.PropTypes.string\n};\n\nText.defaultProps = {\n  x: 0,\n  y: 0,\n  fill: '#000',\n  fontSize: 20,\n  fontFamily: 'serif',\n  textAnchor: 'start'\n}\n\nmodule.exports = Text;"]}